一、合区脚本使用方法：
	jxy_merge_n.sh是合区脚本，使用方法是：
		./jxy_merge_n.sh 游戏库合区列表文件 用户中心表文件 进行何种操作（备份、合区检测、开始合区）

	其中，合区前需要配置的数据有：
		1. 配置好由几个区合成一个大区
			举个例子，如果合区列表里配置了第9~24个区，同时事先又配好每8个区合成一个大区，则说明该次合区将是9~16区合入9区、17~24区合入17区

			配置方式：修改jxy_merge_n.sh中的g_merge_how_many_zone_to_1参数，
		
		2. 游戏库合区列表
			这个列表配置了各个将要合并的区的信息，根据配置将每隔几个区合成一个区，详细请参照merge_41~80/jxy_zone_41~48.list、merge_41~80/jxy_zone_49~60.list等已配备的列表：

				区号	区名		合区礼包		游戏库名			游戏库ip			本地socket位置
				53		囧53区		10053			ios_app_s053		192.168.2.99		/tmp/mysql.sock63306
				54		囧54区		10054			ios_app_s054		192.168.2.99		/tmp/mysql.sock63306
				55		囧55区		10055			ios_app_s055		192.168.2.99		/tmp/mysql.sock63306
				56		囧56区		10056			ios_app_s056		192.168.2.99		/tmp/mysql.sock63306
				57		囧57区		10057			ios_app_s057		192.168.2.99		/tmp/mysql.sock63306
				58		囧58区		10058			ios_app_s058		192.168.2.98		null
				59		囧59区		10059			ios_app_s059		192.168.2.98		null
				60		囧60区		10060			ios_app_s060		192.168.2.98		null

			其中，各个列的含义分别是：
				区号：该区的区id，用于合区时玩家昵称和门派名称发生冲突后的昵称修正处理，处理方式：冲突玩家昵称 = 玩家昵称#区号，冲突门派名称 = 门派名称#区号
				区名：用于执行脚本时打印当前正在合哪个区，方便跟踪合区进度
				合区礼包：合区后该区的玩家将得到的合区礼包id，目前，合区礼包内容参见合区文档
				游戏库名：该区所对应的游戏库
				游戏库ip 和 本地socket位置：
					用于连接数据库，如果该区位于本机，则配置好本地socket位置，如果该区位于局域网内其他主机，则配置本地socket为"null"，同时配置游戏库ip
					执行脚本时，如果socket不为null，则通过mysql -S socket文件选项连接数据库，如果为null，则通过mysql -h游戏库ip -P63306选项连接游戏库

		3. 用户中心表
			用于合区后发放合区礼包，里面的3个表是合区需要用到的：用户中心库的开服时间表和pay库的活动礼包表、活动礼包奖励玩家表，详细参照merge_41~80/jxy_pay.list

				配置库名			配置库				用户中心库					配置库ip			本地socket位置
				ios_app_pay			ios_app_cfg			ios_app_usercenter			192.168.2.102		null

	传入的操作的含义
		备份 -> 传入<backup>：（仅执行备份，对各区数据无改动）
			合区前必须根据合区列表进行备份，以防合区失败时可以立即还原。由于合区只对被合的区有改动（如1~8区合入1区，则只有1区的数据会被改动），所以，脚本将只备份各个被合入的区，比如，假设1~40区8区一合，则只备份1、9、17、25、33区
			执行该操作后，脚本开始进行备份，每个游戏库将被通过mysqldump备份成一个sql文件<游戏库名_at_年_月_日_时_分_秒.sql>，存放在<backup_合区id列表_at_年_月_日_时_分_秒>文件夹中

			以41~48每4区合一大区为例，则生成的备份文件夹内容为：
				backup_41_42_43_44_45_46_47_48_at_2014_04_14_12_59_55（备份文件夹）
					ios_app_s041.sql<41区备份文件>
					ios_app_s045.sql<45区备份文件>

		合区检测 -> 传入<check>：（仅执行检测，对各区数据无改动）
			用于合区前检测，主要检测内容是：

			1. 检测各区之间是否存在相同的玩家ID或者门派ID
			2. 模拟合区，为各区建立一个小型拷贝区（仅拷贝原区中各表的前500条数据），在小型区上进行合区，用于验证实际合区时是否能成功

			以41~44每4区合一大区为例，最后将创建出2个数据库：
				merge_check_2014_04_14<合区检测库>
					at_2014_04_14_13_06_04_conflict_players_41_42_43_44		<41~44区冲突玩家表>
					at_2014_04_14_13_06_04_conflict_faction_id_41_42_43_44	<41~44区冲突门派表>

				try_merge_2014_04_14<模拟合区库>
					参加下面的正式合区内容


		正式开始合区 -> 传入<merge_年_月_日_时>：（被合入的区数据将发生改动，其余区数据不会变动）
			为尽量避免参数传入失误，故需将当前时间传入（精确到小时），如:merge_2014_04_10_12，若时间不匹配将拒绝合区。
			合区前将检测今天是否曾经备份过，如果没备份过，则自动备份，备份完后自动进行合区。

			合区过程中，将会在第一个区所在的游戏库创建出合区库<merge_年_月_日>，并在里面创建临时表用于数据转移，其中的一部分表将一直保留，用于合区结果跟踪，需要手动删除。
			合区后残留的表如下（以41~44区合区为例）：
				merge_2014_04_21<数据库>
					at_2014_04_21_13_40_20_zone_41_players<41区玩家表>
					at_2014_04_21_13_40_20_zone_41_faction<41区门派表>
					at_2014_04_21_13_40_20_zone_42_players<42区玩家表>
					at_2014_04_21_13_40_20_zone_42_faction<42区门派表>
					... ...
					... ...

					at_2014_04_21_13_40_20_conflict_faction_name_41_42_43_44<41~44区冲突门派名称>
					at_2014_04_21_13_40_20_conflict_players_name_41_42_43_44<41~44区冲突玩家名称>

					at_2014_04_14_13_06_04__merge_gift_players_41_42_43_44<41~44区合区礼包分配表>
					at_2014_04_14_13_06_04__merge_gift_players_45_46_47_48<45~48区合区礼包分配表>

			合区成功后，将会有：

				1. 合区前创建角色的玩家每人将获得一份对应该区的合区礼包（pay库中的合区礼包表中将配备好对应各区的合区礼包记录，并在合区礼包奖励玩家表中新增各区的玩家id段）
					
					合区礼包 =（1000-开服时间（天））元宝+（1000-开服时间（天））*100铜钱 + 20 体力

				2. 除战斗录像和活动进度，每个区的数据都被并入入第一个区，如1~8区合入1区，则合区成功后，1区 = 1区+2区+....+8区, 2~8区不变

				3. 各区之间若发生玩家昵称冲突或者门派名称冲突，将进行修正

					处理方式：冲突玩家昵称 = 玩家昵称#区号，冲突门派名称 = 门派名称#区号

				4. boss战活动中的boss得到加强

			4个区合区所耗费的时间一般在7~20分钟左右，例如，2014年4月14日的合区，49~60区每4区一合，合成3个大区耗费的时间是20分钟

二、合区简要流程（详细得看合区文档）


合区所需要做的工作
	用户中心：
		1. 拟定合区公告，设置服务器状态为合区中状态，用于合区过程中玩家登录不上时进行提示
		2. 修改合区入口，将网关入口指向合入后的大区
		3. 修正各区玩家的当前区ID

	游戏服务器后台：
		1. 合区前进行必要的检测：检验各区数据库字段是否一致、是否存在冲突的玩家ID和门派ID
		2. 合区开始时，关闭掉所有的游戏服务器（网关可以不关）
		3. 暂时关闭从库的同步
		4. 开始合区
		5. 启动大区服务器并重新打开从库的同步






合区前技术检测

	1. 检测磁盘剩余空间是否足够用来合区
	 	df -hT

	2. 检验内存、cpu耗用、磁盘负载量是否正常
		free -mt
		w
		top -n 100
		iostat -m

	3. 检测mysql中是否存在死锁事务及异常进程
		SELECT * FROM INFORMATION_SCHEMA.INNODB_TRX;
		show processlist;