FILE_LIST_C		= $(shell find . -name "*.c")
FILE_LIST_CPP	= $(shell find . -name "*.cpp")
COMM_OBJ        = $(patsubst %.cpp,%.o,${FILE_LIST_CPP}) $(patsubst %.c,%.o,${FILE_LIST_C}) $(patsubst %.cpp,%.o,${OTHER_SRC_CPP}) $(patsubst %.c,%.o,${OTHER_SRC_C})
ALL_OBJ			= $(notdir ${COMM_OBJ})

GEN_BIN_DIR 	= ${bin_dir}/${MODULE}/linux${long_bit}
GEN_DLL_DIR 	= ${bin_dir}/dll/linux${long_bit}

COMPILE_STANDARD = -std=c++0x

A_LINK      = ar rv
ifeq (${compile_type}, OFF)
	LIB_DIR		= ${GEN_DLL_DIR}/release
	ifneq (${EXEC_FILE}, "")
		OUT_DIR     = ${GEN_BIN_DIR}/release/${EXEC_FILE}
	else
		OUT_DIR     = ${GEN_BIN_DIR}/release
	endif
	COMP   		= g++ -c -w -fPIC   -m${long_bit} $(MACD) ${COMPILE_STANDARD} 
	COMPC   	= gcc -c -w -fPIC   -m${long_bit} $(MACD) 
	SO_LINK     = g++ -fPIC -shared   -m${long_bit} $(MACD) ${COMPILE_STANDARD} -o 
	EXEC_LINK   = g++   -m${long_bit} $(MACD) ${COMPILE_STANDARD} -o	
else	
	LIB_DIR		= ${GEN_DLL_DIR}/debug
	ifneq (${EXEC_FILE}, "")
		OUT_DIR     = ${GEN_BIN_DIR}/debug/${EXEC_FILE}
	else
		OUT_DIR     = ${GEN_BIN_DIR}/debug
	endif
	COMP   		= g++ -c -g -w -fPIC  -D_DEBUG  -m${long_bit} $(MACD) ${COMPILE_STANDARD}  		
	COMPC   	= gcc -c -g -w -fPIC  -D_DEBUG  -m${long_bit} $(MACD)
	SO_LINK     = g++ -fPIC -shared -g   -m${long_bit} $(MACD) ${COMPILE_STANDARD} -o
	EXEC_LINK   = g++ -g   -m${long_bit} $(MACD) ${COMPILE_STANDARD} -o
endif

all : $(COMP_ONLY) $(LIBA_FILE) $(LIBSO_FILE) $(EXEC_FILE) 

clean : 
	rm -f *.o *.a *.so $(COMM_OBJ) $(LIBA_FILE) $(LIBSO_FILE) $(EXEC_FILE) $(PCH)

touch :
	touch *.h; touch *.c; touch *.cpp


install:$(LIBA_FILE) $(EXEC_FILE) $(LIBSO_FILE)

	mkdir -p ${OUT_DIR}; 

	if [ -n '$(LIBA_FILE)' ] ;  \
	then  \
    		cp -rf $(LIBA_FILE) $(OUT_DIR) ; \
	fi

	if [ -n '$(LIBSO_FILE)' ] ;  \
	then  \
    		cp -rf $(LIBSO_FILE) $(OUT_DIR) ; \
	fi

	if [ -n '$(EXEC_FILE)' ] ;  \
	then  \
    		cp -rf $(EXEC_FILE) $(OUT_DIR) ; \
	fi

print:
	echo Hello ${base_dir}world

	
$(COMP_ONLY): $(COMM_OBJ)	

$(LIBA_FILE) : $(COMM_OBJ)
	$(A_LINK) $@ $(COMM_OBJ)

${LIBSO_FILE} : ${COMM_OBJ}
	${SO_LINK} $@ ${COMM_OBJ} -L${LIB_DIR} ${INLIB_FILE} ${INLIB_DIR} ${INC_PATH}

${EXEC_FILE} : ${COMM_OBJ}
	${EXEC_LINK} $@ ${COMM_OBJ} -L${LIB_DIR} ${INLIB_FILE} ${INLIB_DIR} ${INC_PATH} 

${COMM_OBJ} : $(PCH)

# Pre-compiled header
$(PCH): 
	$(COMP) $(INC_PATH) -g $(PCH_H)

.c.o:
	${COMPC} ${INC_PATH} -o $@ $<

.cpp.o:
	${COMP} ${INC_PATH} -include ${PCH_H} -o $@ $<

#-include ${PCH_H}
#   -include ${PCH_H}
